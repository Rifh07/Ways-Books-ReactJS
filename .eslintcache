[{"D:\\Bootcamp\\task\\src\\index.js":"1","D:\\Bootcamp\\task\\src\\App.js":"2","D:\\Bootcamp\\task\\src\\Context\\GlobalContext.jsx":"3","D:\\Bootcamp\\task\\src\\Pages\\LandingPage\\LandingPage.jsx":"4","D:\\Bootcamp\\task\\src\\Component\\PrivateRoute.jsx":"5","D:\\Bootcamp\\task\\src\\Component\\Sidebar.jsx":"6","D:\\Bootcamp\\task\\src\\Pages\\Users\\Home\\Home.jsx":"7","D:\\Bootcamp\\task\\src\\Component\\Home\\data.js":"8","D:\\Bootcamp\\task\\src\\Component\\Home\\Card.jsx":"9","D:\\Bootcamp\\task\\src\\Pages\\Users\\Subscribe\\Subscribe.jsx":"10","D:\\Bootcamp\\task\\src\\Pages\\Users\\Profile\\Profile.jsx":"11","D:\\Bootcamp\\task\\src\\Pages\\Users\\Book\\Book.jsx":"12","D:\\Bootcamp\\task\\src\\Pages\\Users\\Book\\Read.jsx":"13","D:\\Bootcamp\\task\\src\\Pages\\Admin\\Transaction.jsx":"14","D:\\Bootcamp\\task\\src\\Pages\\Admin\\AddBook.jsx":"15","D:\\Bootcamp\\final task\\client\\src\\index.js":"16","D:\\Bootcamp\\final task\\client\\src\\App.js":"17","D:\\Bootcamp\\final task\\client\\src\\Context\\GlobalContext.jsx":"18","D:\\Bootcamp\\final task\\client\\src\\Component\\PrivateRoute.jsx":"19","D:\\Bootcamp\\final task\\client\\src\\Pages\\Admin\\AddBook.jsx":"20","D:\\Bootcamp\\final task\\client\\src\\Pages\\Admin\\Transaction.jsx":"21","D:\\Bootcamp\\final task\\client\\src\\Pages\\Users\\Book\\Book.jsx":"22","D:\\Bootcamp\\final task\\client\\src\\Pages\\Users\\Home\\Home.jsx":"23","D:\\Bootcamp\\final task\\client\\src\\Pages\\Users\\Profile\\Profile.jsx":"24","D:\\Bootcamp\\final task\\client\\src\\Component\\Home\\data.js":"25","D:\\Bootcamp\\final task\\client\\src\\Component\\Home\\Card.jsx":"26","D:\\Bootcamp\\final task\\client\\src\\Component\\Navbar\\Navbar.jsx":"27","D:\\Bootcamp\\final task\\client\\src\\Config\\Api.js":"28","D:\\Bootcamp\\final task\\client\\src\\Pages\\Users\\Cart\\Cart.jsx":"29","D:\\Bootcamp\\final task\\client\\src\\Component\\Cart\\Card.jsx":"30","D:\\Bootcamp\\final task\\client\\src\\Component\\Transaction\\TableTransaction.js":"31","D:\\Bootcamp\\final task\\client\\src\\Component\\Profile\\Card.jsx":"32","D:\\Bootcamp\\final task\\client\\src\\Component\\Home\\CardPromo.jsx":"33","D:\\Bootcamp\\final task\\client\\src\\Component\\Loading.jsx":"34"},{"size":383,"mtime":1612220987229,"results":"35","hashOfConfig":"36"},{"size":1692,"mtime":1612385383054,"results":"37","hashOfConfig":"36"},{"size":1201,"mtime":1612260740201,"results":"38","hashOfConfig":"36"},{"size":5971,"mtime":1612384049115,"results":"39","hashOfConfig":"36"},{"size":487,"mtime":1612235315941,"results":"40","hashOfConfig":"36"},{"size":2011,"mtime":1612246952364,"results":"41","hashOfConfig":"36"},{"size":797,"mtime":1612247076182,"results":"42","hashOfConfig":"36"},{"size":3948,"mtime":1612186107584,"results":"43","hashOfConfig":"36"},{"size":1512,"mtime":1612262769914,"results":"44","hashOfConfig":"36"},{"size":3527,"mtime":1612248520468,"results":"45","hashOfConfig":"36"},{"size":3304,"mtime":1612263493378,"results":"46","hashOfConfig":"36"},{"size":2638,"mtime":1612381281379,"results":"47","hashOfConfig":"36"},{"size":600,"mtime":1612268912980,"results":"48","hashOfConfig":"36"},{"size":6296,"mtime":1612384779110,"results":"49","hashOfConfig":"36"},{"size":4113,"mtime":1612385690139,"results":"50","hashOfConfig":"36"},{"size":383,"mtime":1615724463844,"results":"51","hashOfConfig":"52"},{"size":2079,"mtime":1615828085155,"results":"53","hashOfConfig":"52"},{"size":2221,"mtime":1613928935094,"results":"54","hashOfConfig":"52"},{"size":487,"mtime":1612235315941,"results":"55","hashOfConfig":"52"},{"size":8597,"mtime":1615188370367,"results":"56","hashOfConfig":"52"},{"size":3068,"mtime":1615321143077,"results":"57","hashOfConfig":"52"},{"size":4817,"mtime":1615828350130,"results":"58","hashOfConfig":"52"},{"size":2036,"mtime":1615729113383,"results":"59","hashOfConfig":"52"},{"size":8142,"mtime":1615601744039,"results":"60","hashOfConfig":"52"},{"size":4041,"mtime":1613454378416,"results":"61","hashOfConfig":"52"},{"size":8619,"mtime":1615831395674,"results":"62","hashOfConfig":"52"},{"size":10027,"mtime":1615831236509,"results":"63","hashOfConfig":"52"},{"size":322,"mtime":1613046730594,"results":"64","hashOfConfig":"52"},{"size":6687,"mtime":1615179525947,"results":"65","hashOfConfig":"52"},{"size":1014,"mtime":1613481330617,"results":"66","hashOfConfig":"52"},{"size":1856,"mtime":1613860428553,"results":"67","hashOfConfig":"52"},{"size":1626,"mtime":1615827650772,"results":"68","hashOfConfig":"52"},{"size":11733,"mtime":1615831144296,"results":"69","hashOfConfig":"52"},{"size":296,"mtime":1615830432439,"results":"70","hashOfConfig":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"163hbec",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"8e8xy2",{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"107"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"107"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"107"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"107"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"107"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"107"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"107"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"D:\\Bootcamp\\task\\src\\index.js",[],["156","157"],"D:\\Bootcamp\\task\\src\\App.js",[],"D:\\Bootcamp\\task\\src\\Context\\GlobalContext.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\LandingPage\\LandingPage.jsx",[],"D:\\Bootcamp\\task\\src\\Component\\PrivateRoute.jsx",[],"D:\\Bootcamp\\task\\src\\Component\\Sidebar.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Home\\Home.jsx",[],"D:\\Bootcamp\\task\\src\\Component\\Home\\data.js",[],"D:\\Bootcamp\\task\\src\\Component\\Home\\Card.jsx",[],["158","159"],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Subscribe\\Subscribe.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Profile\\Profile.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Book\\Book.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Book\\Read.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Admin\\Transaction.jsx",["160"],"import React, { useContext } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\r\nimport { faBook, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { AppContext } from \"../../Context/GlobalContext\"\r\n\r\nfunction Transaction() {\r\n    const history = useHistory();\r\n    const [state, dispatch] = useContext(AppContext);\r\n    function logout() {\r\n          dispatch({\r\n            type: \"LOGOUT\",\r\n          })\r\n          history.push(\"/\")\r\n      }\r\n  return (\r\n    <div className=\"mt-5 ml-5 pl-5 pr-5 mr-5 pr-5\">\r\n      <Link to=\"/Transaction\" as={Link} className=\"none-decoration inline\">\r\n        <img className=\"mb-5\" src=\"/Img/Content/wow-mini.png\" alt=\"\" />\r\n      </Link>\r\n\r\n      <NavDropdown className=\"float-right inline admin-profile\" title={ <img src=\"/Img/Profile/AdminProfile.png\" alt=\"\" /> } >\r\n        <Dropdown.Item to=\"/AddBook\" as={Link}>\r\n          <FontAwesomeIcon icon={faBook} className=\"mr-4 c-grey\" />\r\n          Add Book\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={()=>logout()}>\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-4 c-red\" />\r\n          Logout\r\n        </Dropdown.Item>\r\n      </NavDropdown>\r\n\r\n      <div className=\"mt-1 mb-5\">\r\n        <h3 className=\"name-home\">Incoming Transaction</h3>\r\n      </div>\r\n      <div className=\"table-reponsif\">\r\n        <table className=\"table table-striped mb-5\">\r\n          <thead>\r\n            <tr className=\"c-red\">\r\n              <th scope=\"col\">No</th>\r\n              <th scope=\"col\">Users</th>\r\n              <th scope=\"col\">Bukti Transfer</th>\r\n              <th scope=\"col\">Remaining Active</th>\r\n              <th scope=\"col\">Status Users</th>\r\n              <th scope=\"col\">Status Payment</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className=\"align-middle\">\r\n              <th scope=\"row\">1</th>\r\n              <td >Radif</td>\r\n              <td>bukti1.jpg</td>\r\n              <td>26/Hari</td>\r\n              <td className=\"c-green\">Active</td>\r\n              <td className=\"c-green\">Approve</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Haris Rahman</td>\r\n              <td>bukti2.jpg</td>\r\n              <td>26/Hari</td>\r\n              <td className=\"c-green\">Active</td>\r\n              <td className=\"c-green\">Approve</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Amin Subagio</td>\r\n              <td>bukti3.jpg</td>\r\n              <td>0/Hari</td>\r\n              <td className=\"c-red\">Not Active</td>\r\n              <td className=\"c-red\">Cancel</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">4</th>\r\n              <td>Haris Astina</td>\r\n              <td>bukti4.jpg</td>\r\n              <td>0/Hari</td>\r\n              <td className=\"c-red\">Not Active</td>\r\n              <td className=\"c-yellow\">Pending</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">5</th>\r\n              <td>Aziz Oni On</td>\r\n              <td>bukti5.jpg</td>\r\n              <td>0/Hari</td>\r\n              <td className=\"c-red\">Not Active</td>\r\n              <td className=\"c-yellow\">Pending</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">6</th>\r\n              <td>Sugeng No Pants</td>\r\n              <td>bukti6.jpg</td>\r\n              <td>0/Hari</td>\r\n              <td className=\"c-red\">Not Active</td>\r\n              <td className=\"c-yellow\">Pending</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transaction;\r\n","D:\\Bootcamp\\task\\src\\Pages\\Admin\\AddBook.jsx",["161"],"import React, { useContext } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavDropdown, Dropdown, Button } from \"react-bootstrap\";\r\nimport { faBook, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { AppContext } from \"../../Context/GlobalContext\"\r\n\r\nfunction AddBook() {\r\n    const history = useHistory();\r\n    const [state, dispatch] = useContext(AppContext);\r\n    function logout() {\r\n          dispatch({\r\n            type: \"LOGOUT\",\r\n          })\r\n          history.push(\"/\")\r\n      }\r\n  return (\r\n    <div className=\"mt-5 ml-5 pl-5 pr-5 mr-5 pr-5\">\r\n      <Link to=\"/Transaction\" as={Link} className=\"none-decoration inline\">\r\n        <img className=\"mb-5\" src=\"/Img/Content/wow-mini.png\" alt=\"\" />\r\n      </Link>\r\n\r\n      <NavDropdown className=\"float-right inline admin-profile\" title={ <img src=\"/Img/Profile/AdminProfile.png\" alt=\"\" /> } >\r\n        <Dropdown.Item to=\"/AddBook\" as={Link}>\r\n          <FontAwesomeIcon icon={faBook} className=\"mr-4 c-grey\" />\r\n          Add Book\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={()=>logout()}>\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-4 c-red\" />\r\n          Logout\r\n        </Dropdown.Item>\r\n      </NavDropdown>\r\n\r\n      <div className=\"row mb-5\">\r\n        <div className=\"col-md-7\">\r\n          <div className=\"mt-1 mb-5\">\r\n            <h3 className=\"name-home\">Add Book</h3>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"Publication Date\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"Pages\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"Author\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"ISBN\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"About This Book\"\r\n            ></textarea>\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-grey\"\r\n            name=\"file\"\r\n            id=\"actual-btn\"\r\n            hidden\r\n          />\r\n          <label for=\"actual-btn\" className=\"form-grey\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <p className=\"text-left inline c-grey pl-2 pr-2\">\r\n                  Attache Book File\r\n                </p>\r\n                <img\r\n                  className=\"inline\"\r\n                  style={{\r\n                    width: \"7%\",\r\n                    marginTop: \"-3px\",\r\n                  }}\r\n                  src=\"/Img/Content/Attach.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </label>\r\n          <div className=\"lp-button-group text-right\">\r\n            <Button variant=\"danger\" className=\"bg-red\" type=\"submit\">\r\n              Add Book <FontAwesomeIcon icon={faBook} className=\"ml-2\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBook;\r\n","D:\\Bootcamp\\final task\\client\\src\\index.js",[],["162","163"],"D:\\Bootcamp\\final task\\client\\src\\App.js",["164","165","166","167"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PrivateRoute from \"./Component/PrivateRoute\";\nimport { AppContext } from \"./Context/GlobalContext\";\nimport { API, setAuthToken } from \"./Config/Api\";\n\nimport Navbar from \"./Component/Navbar/Navbar\";\nimport Home from \"./Pages/Users/Home/Home\";\nimport Profile from \"./Pages/Users/Profile/Profile\";\nimport Book from \"./Pages/Users/Book/Book\";\nimport Cart from \"./Pages/Users/Cart/Cart\";\nimport Transaction from \"./Pages/Admin/Transaction\";\nimport AddBook from \"./Pages/Admin/AddBook\";\nimport Loading from './Component/Loading';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  const [state, dispatch] = useContext(AppContext);\n  const [loading, setLoading] = useState(true);\n\n  const checkUser = async () => {\n    try {\n      const response = await API.get(\"/check-auth\");\n\n      if (response.status === 401) {\n        return dispatch({\n          type: \"AUTH_ERROR\",\n        });\n        setLoading(false);\n      }\n\n      \n      dispatch({\n        type: \"USER_LOADED\",\n        payload: response.data.data.user,\n      });\n      setLoading(false);\n    } catch (error) {\n      return dispatch({\n        type: \"AUTH_ERROR\",\n      });\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    checkUser();\n  }, []);\n  return (\n    <Router>\n      <Switch>\n        {loading ? (\n          <Loading />\n        ) : (\n          <div className=\"mt-4\">\n            <Navbar />\n            <Route path=\"/\" exact component={Home} />\n            {/* Dengan Auth */}\n            <PrivateRoute path=\"/Transaction\" exact component={Transaction} />\n            <PrivateRoute path=\"/AddBook\" exact component={AddBook} />\n            <PrivateRoute path=\"/Book/:id/Detail\" exact component={Book} />\n            <PrivateRoute path=\"/Profile\" exact component={Profile} />\n            <PrivateRoute path=\"/Cart\" exact component={Cart} />\n          </div>\n        )}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Bootcamp\\final task\\client\\src\\Context\\GlobalContext.jsx",[],"D:\\Bootcamp\\final task\\client\\src\\Component\\PrivateRoute.jsx",[],"D:\\Bootcamp\\final task\\client\\src\\Pages\\Admin\\AddBook.jsx",["168","169"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { API } from \"../../Config/Api\";\r\nimport { AppContext } from \"../../Context/GlobalContext\";\r\n\r\nfunction AddBook() {\r\n  const history = useHistory();\r\n  const [state] = useContext(AppContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [msg, setMsg] = useState(null);\r\n  const [color, setColor] = useState(null);\r\n  const [alert, setAlert] = useState(false);\r\n  const handleAlert = () => {\r\n      setAlert(true)\r\n  }\r\n  const handleAlertc = () => {\r\n      setAlert(false)\r\n  }\r\n  const [form, setForm] = useState({\r\n    title : \"\",\r\n    publicationDate : \"\",\r\n    pages : null,\r\n    author : \"\",\r\n    isbn : null,\r\n    price : null,\r\n    about : \"\",\r\n  }); \r\n  const onChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const [formCover, setFormCover] = useState({\r\n    coverName : \"\",\r\n    coverFile : null,\r\n  });\r\n\r\n  const coverHandler = (e) => {\r\n    setFormCover({\r\n      coverFile : e.target.files[0],\r\n      coverName : e.target.files[0].name\r\n    })\r\n  };\r\n  const [formBook, setFormBook] = useState({\r\n    bookName : \"\",\r\n    bookFile : null,\r\n  });\r\n\r\n  const bookHandler = (e) => {\r\n    setFormBook({\r\n      bookFile : e.target.files[0],\r\n      bookName : e.target.files[0].name\r\n    })\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (state.user.role !== \"Admin\") {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const { title, publicationDate, pages, author, isbn, price, about } = form;\r\n  const { coverFile } = formCover;\r\n  const { bookFile } = formBook;\r\n\r\n  const addBook = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      const body = new FormData();\r\n      body.append(\"title\", title);\r\n      body.append(\"publicationDate\", publicationDate);\r\n      body.append(\"pages\", pages);\r\n      body.append(\"author\", author);\r\n      body.append(\"isbn\", isbn);\r\n      body.append(\"price\", price);\r\n      body.append(\"about\", about);\r\n      body.append(\"coverFile\", coverFile);\r\n      body.append(\"bookFile\", bookFile);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const add = await API.post('/books', body, config);\r\n      setLoading(false);\r\n      setForm({\r\n        title : \"\",\r\n        publicationDate : \"\",\r\n        pages : null,\r\n        author : \"\",\r\n        isbn : null,\r\n        price : null,\r\n        about : \"\",\r\n      }); \r\n      setColor(\"text-center c-green\");\r\n      setMsg(\"Add book is success\");\r\n      handleAlert();\r\n    } catch (error) {\r\n      setLoading(false)\r\n      setColor(\"text-center c-red\");\r\n      setMsg(\"Add book is failed\");\r\n      handleAlert();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-5 ml-5 pl-5 pr-5 mr-5 pr-5\">\r\n      <div className=\"row mb-5\">\r\n        <div className=\"col-md-7\">\r\n          <div className=\"mt-1 mb-5\">\r\n            <h3 className=\"name-home\">Add Book</h3>\r\n          </div>\r\n          <form onSubmit={(e) => addBook(e)}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"title\"\r\n                placeholder=\"Title\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"publicationDate\"\r\n                placeholder=\"Publication Date\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"pages\"\r\n                placeholder=\"Pages\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"author\"\r\n                placeholder=\"Author\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"isbn\"\r\n                placeholder=\"ISBN\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"price\"\r\n                placeholder=\"Price\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"about\"\r\n                placeholder=\"About This Book\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-grey\" onChange={(e) => coverHandler(e)}\r\n                name=\"coverFile\"\r\n                id=\"actual-btn\"\r\n                hidden\r\n              />\r\n              <label for=\"actual-btn\" className=\"form-grey\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <p className=\"text-left inline c-grey pl-2 pr-2\">\r\n                      Attache Cover File\r\n                    </p>\r\n                    <img\r\n                      className=\"inline\"\r\n                      style={{\r\n                        width: \"7%\",\r\n                        marginTop: \"-3px\",\r\n                      }}\r\n                      src=\"/Img/Content/Attach.png\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </label>\r\n              <p style={{display: \"inline\"}} className=\"ml-3\">{formCover.coverName ? formCover.coverName : \"No file chosen\"}</p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-grey\" onChange={(e) => bookHandler(e)}\r\n                name=\"bookFile\"\r\n                id=\"actual-btn2\"\r\n                hidden\r\n              />\r\n              <label for=\"actual-btn2\" className=\"form-grey\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <p className=\"text-left inline c-grey pl-2 pr-2\">\r\n                      Attache Book File\r\n                    </p>\r\n                    <img\r\n                      className=\"inline\"\r\n                      style={{\r\n                        width: \"7%\",\r\n                        marginTop: \"-3px\",\r\n                      }}\r\n                      src=\"/Img/Content/Attach.png\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </label>\r\n              <p style={{display: \"inline\"}} className=\"ml-3\">{formBook.bookName ? formBook.bookName : \"No file chosen\"}</p>\r\n            </div>\r\n\r\n            {/* {JSON.stringify(form)} */}\r\n\r\n            <div className=\"lp-button-group text-right\">\r\n              {loading ? (\r\n                <Button variant=\"danger\" className=\"bg-red\" disabled>\r\n                  <div class=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                  Add Book <FontAwesomeIcon icon={faBook} className=\"ml-2\" />\r\n                </Button>\r\n              ) : (\r\n                <Button variant=\"danger\" className=\"bg-red\" type=\"submit\">\r\n                  Add Book <FontAwesomeIcon icon={faBook} className=\"ml-2\" />\r\n                </Button>\r\n              )}\r\n              \r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n        <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered show={alert} onHide={handleAlertc}>\r\n            <Modal.Body className=\"width-100\" id=\"contained-modal-title-vcenter\">\r\n                <p className={color}>{msg}</p>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBook;\r\n","D:\\Bootcamp\\final task\\client\\src\\Pages\\Admin\\Transaction.jsx",["170","171"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nimport { API } from \"../../Config/Api\";\r\nimport { AppContext } from \"../../Context/GlobalContext\";\r\nimport TableTransaction from \"../../Component/Transaction/TableTransaction\";\r\n\r\nfunction Transaction() {\r\n  const history = useHistory();\r\n  const [state, dispatch] = useContext(AppContext);\r\n  const [transaction, setTransaction] = useState([]);\r\n  const [msg, setMsg] = useState(null);\r\n  const [color, setColor] = useState(null);\r\n  const [alert, setAlert] = useState(false);\r\n  const handleAlert = () => {\r\n      setAlert(true)\r\n  }\r\n  const handleAlertc = () => {\r\n      setAlert(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state.user.role !== \"Admin\") {\r\n      history.push(\"/\");\r\n    }\r\n    getTransaction();\r\n  }, []);\r\n\r\n  const getTransaction = async () => {\r\n    try {\r\n      const transaction = await API.get(\"/transaction\");\r\n      await setTransaction(transaction.data.data.transactions);\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n  const action = async (id, paymentStatus) => {\r\n    try {        \r\n      const body = JSON.stringify({\r\n        paymentStatus\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const transaction = await API.patch(`/transaction/${id}`, body, config);\r\n      if (transaction) {\r\n        getTransaction();\r\n        setColor(\"text-center c-green\");\r\n        setMsg(\"Update payment has been successfully\");\r\n        handleAlert();\r\n      }\r\n\r\n    } catch (error) {\r\n      setColor(\"text-center c-red\");\r\n        setMsg(\"Update payment has been unsuccessful\");\r\n        handleAlert();\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"mt-5 ml-5 pl-5 pr-5 mr-5 pr-5\">\r\n      <div className=\"mt-1 mb-5\">\r\n        <h3 className=\"name-home\">Incoming Transaction</h3>\r\n      </div>\r\n      <div className=\"table-reponsif\">\r\n        <table className=\"table table-striped mb-5\">\r\n          <thead>\r\n            <tr className=\"c-red\">\r\n              <th scope=\"col\">No</th>\r\n              <th scope=\"col\">Users</th>\r\n              <th scope=\"col\">Evidence of Transfer</th>\r\n              <th scope=\"col\">Product Purchased</th>\r\n              <th scope=\"col\">Total Payment</th>\r\n              <th scope=\"col\">Status Payment</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {transaction.map((transaction, index) =>(\r\n              <TableTransaction key={transaction.id} transaction={transaction} action={action} index={index} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered show={alert} onHide={handleAlertc}>\r\n            <Modal.Body className=\"width-100\" id=\"contained-modal-title-vcenter\">\r\n                <p className={color}>{msg}</p>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transaction;\r\n","D:\\Bootcamp\\final task\\client\\src\\Pages\\Users\\Book\\Book.jsx",["172","173"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { API } from \"../../../Config/Api\";\r\nimport { AppContext } from \"../../../Context/GlobalContext\";\r\nimport Loading from '../../../Component/Loading';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction Book() {\r\n  const [bookss, setBooks] = useState([]);\r\n  const [state, dispatch] = useContext(AppContext);\r\n  const [ownBooks, setOwnBooks] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const { books } = state;\r\n  const [msg, setMsg] = useState(null);\r\n  const [color, setColor] = useState(null);\r\n  const [alert, setAlert] = useState(false);\r\n  const handleAlert = () => {\r\n    setAlert(true)\r\n  }\r\n  const handleAlertc = () => {\r\n    setAlert(false)\r\n  }\r\n  const { id } = useParams();\r\n \r\n  useEffect(() => {\r\n    book();\r\n    ownBook();\r\n  }, []);\r\n\r\n  const findBook = books.find(books => books.id == id);\r\n\r\n  const book = async () => {\r\n    try {\r\n      const books = await API.get(`/books/${id}`);\r\n      await setBooks(books.data.data.book);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } \r\n  }\r\n\r\n  const cart = async () => {\r\n    if (findBook){\r\n      setColor(\"text-center c-red\");\r\n      await setMsg(\"The book is already in the cart\");\r\n      handleAlert();\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_CART\",\r\n        payload: bookss,\r\n      })\r\n      setColor(\"text-center c-green\");\r\n      await setMsg(\"The product is successfully added to the cart\");\r\n      handleAlert();\r\n    }\r\n  }\r\n\r\n  const ownBook = async () =>{\r\n    try {\r\n      const ownBooks = await API.get(`/books/${id}/${state.user.id}`);\r\n      const data = ownBooks.data.status;\r\n      if (data) {\r\n        await setOwnBooks(data);\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-5 ml-5 mr-5 pl-5 pr-5 pb-5\">\r\n      {loading ? (\r\n          <Loading />\r\n      ) : (\r\n        <div className=\"ml-5 mr-5 pl-5 pr-5\">\r\n          <div className=\"row pt-5 text-left\">\r\n            <div className=\"col-md-4\">\r\n              <img className=\"book width-100 rounded\" src={'/Img/CoverBook/'+bookss.coverFile} alt=\"\" />\r\n            </div>\r\n            <div className=\"col-md-7 pl-4\">\r\n              <h1 className=\"name-home mb-1 mt-2\">{bookss.title}</h1>\r\n              <h6 className=\"c-grey\">{bookss.author}</h6>\r\n              <h6 className=\"font-wg mt-4 mb-1\">Publication date</h6>\r\n              <p className=\"c-grey text-profile\">{bookss.publicationDate}</p>\r\n              <h6 className=\"font-wg mt-4 mb-1\">Pages</h6>\r\n              <p className=\"c-grey text-profile\">{bookss.pages}</p>\r\n              <h6 className=\"font-wg c-red mt-4 mb-1\">ISBN</h6>\r\n              <p className=\"c-grey text-profile\">{bookss.isbn}</p>\r\n              <h6 className=\"font-wg mt-5 mb-1\">Price</h6>\r\n              <p className=\"c-green text-profile\">Rp. {bookss.price},-</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-5\">\r\n            <h4 className=\"name-home mb-3\">About This Book</h4>\r\n            <p className=\"c-grey mb-5 text-justify\">\r\n                {bookss.about}\r\n            </p>\r\n            <div className=\"lp-button-group text-right\">\r\n                {/* {transactions.map((transaction) => (\r\n                    <Buttons\r\n                      transaction={transaction}\r\n                      bookId={id}\r\n                      getBook={getBook}\r\n                      key={transaction.id}\r\n                    />\r\n                ))} */}\r\n                {ownBooks === \"Success\" ? (\r\n                  <a href={'/Img/Book/'+bookss.bookFile} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                    <Button variant=\"dark\"> Download </Button>\r\n                  </a>\r\n                  // <Button variant=\"dark\" onClick={cart}> \r\n                  //     Download\r\n                  // </Button>\r\n                ) : (\r\n                  <Button variant=\"dark\" onClick={cart}> \r\n                    {findBook ? \"The book is already in the cart\" : \"Add Cart\"}   <FontAwesomeIcon icon={faShoppingCart} className=\"ml-2\" />\r\n                  </Button>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n        {/* {listBooks ? \"true\" : \"false\"} */}\r\n\r\n        <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered show={alert} onHide={handleAlertc}>\r\n          <Modal.Body className=\"width-100\" id=\"contained-modal-title-vcenter\">\r\n              <p className={color}>{msg}</p>\r\n          </Modal.Body>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Book;\r\n","D:\\Bootcamp\\final task\\client\\src\\Pages\\Users\\Home\\Home.jsx",[],"D:\\Bootcamp\\final task\\client\\src\\Pages\\Users\\Profile\\Profile.jsx",["174","175","176","177"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { Button, Modal, Alert } from \"react-bootstrap\"\r\nimport { faEnvelope, faTransgender, faPhoneAlt, faSearchLocation } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport { API } from \"../../../Config/Api\";\r\nimport { AppContext } from \"../../../Context/GlobalContext\"\r\nimport Card from '../../../Component/Profile/Card';\r\nimport Loading from '../../../Component/Loading';\r\n\r\nfunction Profile() {\r\n  const [state, dispatch] = useContext(AppContext);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [alert, setAlert] = useState(false);\r\n  const [alertFormEditProfile, setAlertFormEditProfile] = useState(false);\r\n  const [showEditProfile, setShowEditProfile] = useState(false);\r\n  const [FormData, setForm] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    gender: \"\",\r\n  });\r\n  const handleAlert = () => {\r\n    setAlert(true)\r\n  }\r\n  const handleAlertc = () => {\r\n    setAlert(false)\r\n  }\r\n  const editProfile = () => {\r\n    setAlertFormEditProfile(true)\r\n  }\r\n  const editProfilec = () => {\r\n    setAlertFormEditProfile(false)\r\n  }\r\n  const onChange = (e) => {\r\n    setForm({ ...FormData, [e.target.name]: e.target.value });\r\n  };\r\n  const valueEdit = (e) => {\r\n    setForm({ \r\n      ...FormData,\r\n      fullName: state.user.fullName,\r\n      email: state.user.email,\r\n      phone: state.user.phone,\r\n      address: state.user.address,\r\n      gender: state.user.gender,\r\n    });\r\n  };\r\n  const usersId = state.user.id;\r\n \r\n  useEffect(() => {\r\n    transaction();\r\n    valueEdit();\r\n  }, []);\r\n\r\n  const { fullName, email, phone, address, gender } = FormData;\r\n  const editUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = JSON.stringify({\r\n        fullName, phone, address, gender\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const user = await API.put(`/users/${state.user.id}`, body, config);\r\n      await dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: user.data.data.user,\r\n      });\r\n\r\n      setShowEditProfile((\r\n        <Alert variant=\"success\" onClose={() => setShowEditProfile(false)} dismissible>\r\n          <p>Your profile has been succcessfully updated</p>\r\n        </Alert>\r\n      ))\r\n\r\n    } catch (error) {\r\n      setShowEditProfile((\r\n        <Alert variant=\"danger\" onClose={() => setShowEditProfile(false)} dismissible>\r\n          <p>Your profile has been unsucccessful updated</p>\r\n        </Alert>\r\n      ))\r\n    }\r\n  };\r\n\r\n  const transaction = async () =>{\r\n    try {\r\n      const transaction = await API.get(`/transaction/user/${usersId}`);\r\n      await setTransactions(transaction.data.data.transactions);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-5 ml-5 mr-5 pl-5 pr-5\">\r\n      <div className=\"mb-5 ml-5 mr-5 pl-5 pr-5\">\r\n        <div className=\"mt-5\">\r\n          <h3 className=\"name-home\">Profile</h3>\r\n        </div>\r\n        <div className=\"mt-4 mb-3 pl-5 pb-5 pt-4 profile-container bg-pink border-radius\">\r\n          <div className=\"pb-5 float-left\">\r\n            <div className=\"mb-3\">\r\n              <h2 className=\"inline align-middle c-grey\">\r\n                <FontAwesomeIcon icon={faEnvelope} className=\"mr-4\" />\r\n              </h2>\r\n              <div className=\"inline-block align-top\">\r\n                <p className=\"m-1 text-profile\">{ state.user.email }</p>\r\n                <p className=\"m-1 text-profile c-grey\">Email</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <h2 className=\"inline align-middle c-grey\">\r\n                <FontAwesomeIcon icon={faTransgender} className=\"mr-4\" />\r\n              </h2>\r\n              <div className=\"inline-block align-top\">\r\n                <p className=\"m-1 text-profile\">{ state.user.gender } </p>\r\n                <p className=\"m-1 text-profile c-grey\">Gender</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <h2 className=\"inline align-middle c-grey\">\r\n                <FontAwesomeIcon icon={faPhoneAlt} className=\"mr-4\" />\r\n              </h2>\r\n              <div className=\"inline-block align-top\">\r\n                <p className=\"m-1 text-profile\">{ state.user.phone }</p>\r\n                <p className=\"m-1 text-profile c-grey\">Mobile Phone</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <h2 className=\"inline align-middle c-grey\">\r\n                <FontAwesomeIcon icon={faSearchLocation} className=\"mr-4\" />\r\n              </h2>\r\n              <div className=\"inline-block align-top\">\r\n                <p className=\"m-1 text-profile\">\r\n                  { state.user.address }\r\n                </p>\r\n                <p className=\"m-1 text-profile c-grey\">Address</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"float-right mr-4\">\r\n            <div className=\"form-group\">\r\n              <img className=\"border-radius\" src=\"Img/Profile/EditProfile.png\" alt=\"\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Button\r\n                variant=\"danger\"\r\n                className=\"form-control bg-red\"\r\n                type=\"submit\"\r\n                onClick={() => editProfile() }\r\n              >\r\n                Edit Profile\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h3 className=\"name-home\">My Book</h3>\r\n        </div>\r\n        <div className=\"row justify-content-left mt-1 \">\r\n          {loading ? (\r\n            <Loading />\r\n          ) : (\r\n            transactions.map((transaction) => (\r\n              <Card\r\n                transaction={transaction}\r\n                key={transaction.id}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered dialogClassName=\"modal-sign\" show={alertFormEditProfile} onHide={editProfilec}>\r\n        <Modal.Body className=\"width-80\" id=\"contained-modal-title-vcenter\">\r\n          <div className=\"mt-4\">\r\n\r\n            <h2 className=\"mb-4\"> Edit Profile</h2>\r\n            <form onSubmit={(e) => editUser(e)} >\r\n              <div className=\"form-group\">\r\n                {showEditProfile}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\"  className=\"form-control form-grey\" name=\"fullName\" value={fullName}  onChange={(e) => onChange(e)} placeholder=\"Full Name\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"email\"  className=\"form-control form-grey\" value={email}  placeholder=\"Email\" readOnly />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <select name=\"gender\" className=\"form-control  form-grey\" value={gender} onChange={(e) => onChange(e)} >\r\n                  <option disabled selected>== Gender ==</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control  form-grey\" name=\"phone\" value={phone} onChange={(e) => onChange(e)} placeholder=\"Phone Number\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control  form-grey\" name=\"address\" value={address} onChange={(e) => onChange(e)} placeholder=\"Address\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Button variant=\"danger\" className=\"form-control bg-red\" type=\"submit\"> Save </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","D:\\Bootcamp\\final task\\client\\src\\Component\\Home\\data.js",[],["178","179"],"D:\\Bootcamp\\final task\\client\\src\\Component\\Home\\Card.jsx",[],"D:\\Bootcamp\\final task\\client\\src\\Component\\Navbar\\Navbar.jsx",["180","181","182"],"import React, { useState, useContext } from \"react\";\r\nimport { Button, Modal, NavDropdown, Dropdown, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { faUser, faBook, faSignOutAlt, faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { API, setAuthToken } from \"../../Config/Api\";\r\nimport { AppContext } from \"../../Context/GlobalContext\";\r\n\r\nfunction Navbar() {\r\n  const history = useHistory();\r\n  const [state, dispatch] = useContext(AppContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [signIn, setSignIn] = useState(false);\r\n  const [signUp, setSignUp] = useState(false);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [FormData, setForm] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setForm({ ...FormData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSignIn(false)\r\n    setSignUp(false)\r\n  }\r\n  const handleSignIn = () => {\r\n    setSignUp(false)\r\n    setSignIn(true)\r\n  }\r\n  const handleSignUp = () => {\r\n    setSignIn(false)\r\n    setSignUp(true)\r\n  }\r\n\r\n  const books = state.books;\r\n  const qty = books.length;\r\n  const { fullName, email, password, phone, address, gender } = FormData;\r\n\r\n  const Register = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const body = JSON.stringify({\r\n        fullName, email, password, phone, address, gender\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const user = await API.post(\"/register\", body, config);\r\n      await dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: user.data.data.user,\r\n        payloadToken: user.data.data.token,\r\n      });\r\n      setAuthToken(user.data.data.token);\r\n      setLoading(false);\r\n      handleClose();\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setShowRegister((\r\n        <Alert variant=\"danger\" onClose={() => setShowRegister(false)} dismissible>\r\n          <p>Email already exists</p>\r\n        </Alert>\r\n      ))\r\n    }\r\n  };\r\n  const Login = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const body = JSON.stringify({\r\n        email,\r\n        password\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const user = await API.post(\"/login\", body, config);\r\n\r\n      dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: user.data.data.user,\r\n        payloadToken: user.data.data.token,\r\n      });\r\n\r\n      setAuthToken(user.data.data.token);\r\n      setLoading(false);\r\n      handleClose();\r\n      if (user) {\r\n        history.push(\"/Transaction\");\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setShowLogin((\r\n        <Alert variant=\"danger\" onClose={() => setShowLogin(false)} dismissible>\r\n          <p>Username or password incorrect</p>\r\n        </Alert>\r\n      ))\r\n    }\r\n  };\r\n\r\n  function logout() {\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"ml-5 mr-4\">\r\n      {state.isLogin ? state.user.role == \"Admin\" ? (\r\n        <>\r\n          <Link to=\"/Transaction\" as={Link} className=\"none-decoration inline\">\r\n            <img className=\"mb-5\" src=\"/Img/Content/logo.png\" alt=\"\" />\r\n          </Link>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Link to=\"/\" as={Link} className=\"none-decoration inline\">\r\n            <img className=\"mb-5\" src=\"/Img/Content/logo.png\" alt=\"\" />\r\n          </Link>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Link to=\"/\" as={Link} className=\"none-decoration inline\">\r\n            <img className=\"mb-5\" src=\"/Img/Content/logo.png\" alt=\"\" />\r\n          </Link>\r\n        </>\r\n      )}\r\n\r\n      \r\n      <div className=\"float-right inline lp-button-group\">\r\n      {state.isLogin ? (\r\n        <>\r\n           {state.user.role == \"Admin\" ? (\r\n            <>\r\n              <NavDropdown className=\"float-right inline\" title={ <img className=\"admin-profile\" src=\"/Img/Profile/FotoProfile.png\" alt=\"\" /> } >\r\n                <Dropdown.Item to=\"/AddBook\" as={Link}>\r\n                  <FontAwesomeIcon icon={faBook} className=\"mr-4 c-grey\" />\r\n                  Add Book\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={()=>logout()}>\r\n                  <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-4 c-red\" />\r\n                  Logout\r\n                </Dropdown.Item>\r\n              </NavDropdown>\r\n            </>\r\n           ) : (\r\n            <>\r\n              <Link to=\"/Cart\" as={Link}>\r\n                <img src=\"/Img/Content/cart.png\" className=\"mt-3\" alt=\"\"/><sup className=\"numberCircle mr-3\">{qty}</sup>\r\n                {/* <FontAwesomeIcon icon={faShoppingCart} className=\"c-black fa-2x\" style={{height: \"76px\"}}/> */}\r\n              </Link>\r\n              <NavDropdown className=\"float-right inline\" title={ <img className=\"admin-profile\" src=\"/Img/Profile/FotoProfile.png\" alt=\"\" /> } >\r\n                <Dropdown.Item to=\"/Profile\" as={Link}>\r\n                  <FontAwesomeIcon icon={faUser} className=\"mr-4 c-grey\" />\r\n                  Profile\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={()=>logout()}>\r\n                  <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-4 c-red\" />\r\n                  Logout\r\n                </Dropdown.Item>\r\n              </NavDropdown>\r\n            </>\r\n           )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <button className=\"btn btn-light\" onClick={handleSignIn} style={{width: \"120px\"}}> Login </button>\r\n          <button className=\"btn ml-3 btn-dark\" onClick={handleSignUp} style={{width: \"120px\"}}> Register </button>\r\n        </>\r\n      )}\r\n      </div>\r\n      {/* Modal Sign In */}\r\n      <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered dialogClassName=\"modal-sign\" show={signIn} onHide={handleClose}>\r\n        <Modal.Body id=\"contained-modal-title-vcenter\">\r\n          <div className=\"mt-4\">\r\n            <h2 className=\"mb-4\"> Login</h2>\r\n            <form onSubmit={(e) => Login(e)}>\r\n              <div className=\"form-group\">\r\n                {showLogin}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"email\" className=\"form-control form-grey\" name=\"email\" onChange={(e) => onChange(e)} placeholder=\"Email\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"password\" className=\"form-control form-grey\" name=\"password\" onChange={(e) => onChange(e)} placeholder=\"Password\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                {loading ? (\r\n                  <Button variant=\"dark\" className=\"form-control\"> Loading ...</Button>\r\n                ) : (\r\n                  <Button variant=\"dark\" className=\"form-control\" type=\"submit\"> Login</Button>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <h6>Don't have an account? Klik <b className=\"cursor inline font-wg\" onClick={handleSignUp}>Here</b></h6>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* Modal Sign Up */}\r\n      <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered dialogClassName=\"modal-sign\" show={signUp} onHide={handleClose}>\r\n        <Modal.Body className=\"width-80\" id=\"contained-modal-title-vcenter\">\r\n          <div className=\"mt-4\">\r\n\r\n            <h2 className=\"mb-4\"> Register</h2>\r\n            <form onSubmit={(e) => Register(e)}>\r\n              <div className=\"form-group\">\r\n                {showRegister}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\"  className=\"form-control form-grey\" name=\"fullName\"  onChange={(e) => onChange(e)} placeholder=\"Full Name\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"email\"  className=\"form-control form-grey\" name=\"email\"  onChange={(e) => onChange(e)} placeholder=\"Email\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"password\" className=\"form-control  form-grey\" name=\"password\" onChange={(e) => onChange(e)} placeholder=\"Password\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <select name=\"gender\" className=\"form-control  form-grey\" onChange={(e) => onChange(e)} >\r\n                  <option disabled selected>== Gender ==</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control  form-grey\" name=\"phone\" onChange={(e) => onChange(e)} placeholder=\"Phone Number\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control  form-grey\" name=\"address\" onChange={(e) => onChange(e)} placeholder=\"Address\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                {loading ? (\r\n                  <Button variant=\"dark\" className=\"form-control\"> Loading ...</Button>\r\n                ) : (\r\n                  <Button variant=\"dark\" className=\"form-control\" type=\"submit\"> Register</Button>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <h6>Already have an account? Klik <b className=\"cursor inline font-wg\" onClick={handleSignIn}>Here</b></h6>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\Bootcamp\\final task\\client\\src\\Config\\Api.js",[],"D:\\Bootcamp\\final task\\client\\src\\Pages\\Users\\Cart\\Cart.jsx",["183","184"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nimport { API } from \"../../../Config/Api\";\r\nimport { AppContext } from \"../../../Context/GlobalContext\";\r\nimport Card from \"../../../Component/Cart/Card\";\r\n\r\nfunction Cart() {\r\n    const history = useHistory();\r\n    const [state, dispatch] = useContext(AppContext);\r\n    const { books } = state;\r\n    const [msg, setMsg] = useState(null);\r\n    const [color, setColor] = useState(null);\r\n    const [alert, setAlert] = useState(false);\r\n    const handleAlert = () => {\r\n        setAlert(true)\r\n    }\r\n    const handleAlertc = () => {\r\n        setAlert(false)\r\n    }\r\n    const [formImage, setFormImage] = useState({\r\n        fileName : \"\",\r\n        transferProof : null,\r\n    });\r\n    const imageHandler = (e) => {\r\n        setFormImage({\r\n            transferProof : e.target.files[0],\r\n            fileName : e.target.files[0].name\r\n        })\r\n    };\r\n\r\n    \r\n    const total = books.reduce((total, subTotal) => total + subTotal.price, 0);\r\n\r\n    const qty = books.length;\r\n\r\n    const { transferProof } = formImage;\r\n    const usersId = state.user.id;\r\n\r\n    const pay = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n          const body = new FormData();\r\n          body.append(\"userId\", usersId);\r\n          body.append(\"paymentTotal\", total);\r\n          body.append(\"transferProof\", transferProof);\r\n    \r\n          const config = {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          };\r\n    \r\n          const transaction = await API.post('/transaction', body, config);\r\n\r\n          const transactionId = transaction.data.data.transaction.id;\r\n\r\n          const mapping = await books.map(book => {\r\n            const { id } = book;\r\n            const booksId = id;\r\n            \r\n            const body = JSON.stringify({\r\n                booksId, transactionId, usersId\r\n            });\r\n        \r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            API.post('/books/list', body, config);\r\n          });\r\n          \r\n          if (mapping) {\r\n            setFormImage({transferProof : \"\" ,fileName : \"\"})\r\n            setColor(\"text-center c-green\");\r\n            await setMsg(\"Thank you for ordering in us, please wait 1 x 24 hours to verify you order\");\r\n            handleAlert();\r\n            dispatch({\r\n                type: \"EMPTY_CART\"\r\n            });\r\n          }\r\n        } catch (error) {\r\n            setColor(\"text-center c-red\");\r\n            await setMsg(\"Upload transaction error\");\r\n            handleAlert();\r\n        } \r\n    }\r\n    \r\n    const remove = (id) => {\r\n        dispatch({\r\n            type: \"REMOVE_CART\",\r\n            payload: { id, },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-5 ml-5 mr-5 pb-5\">\r\n            <div className=\"mb-5 ml-5 mr-5 pl-5 pr-5\">\r\n                <div className=\"mt-4 mb-5\">\r\n                  <h3 className=\"name-home\">My Cart</h3>\r\n                </div>\r\n                <h5 className=\"name-home\">Review Your Order</h5>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 text-left pr-3\">\r\n                        <div className=\"line-home mb-4\"></div>\r\n                        {qty === 0 ? (\r\n                            <p className=\"text-center\">\r\n                                Ooops, Cart is empty!\r\n                            </p>\r\n                        ) : (\r\n                            books.map((book) => (\r\n                                <Card key={book.id} book={book} remove={remove} />\r\n                            ))\r\n                        )}\r\n                        <div className=\"line-home mt-4\"></div>\r\n                    </div>\r\n                    <div className=\"col-md-4 text-left pr-3\">\r\n                        <div className=\"line-home mb-4\"></div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6 text-left\">\r\n                                <p className=\"mb-3\">Sub total</p>\r\n                                <p className=\"mb-3\">Qty</p>\r\n                            </div>\r\n                            <div className=\"col-md-6 text-right\">\r\n                                <p className=\"mb-3\">Rp. {total},-</p>\r\n                                <p className=\"mb-3\">{qty}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"line-home mb-4 mt-4\"></div>\r\n                        <div className=\"row c-green font-wg\">\r\n                            <div className=\"col-md-6 text-left\">\r\n                                <p className=\"mb-3\">Total</p>\r\n                            </div>\r\n                            <div className=\"col-md-6 text-right\">\r\n                                <p className=\"mb-3\">Rp. {total},-</p>\r\n                            </div>\r\n                        </div>\r\n                        <form className=\"ml-5 mt-5\" onSubmit={(e) => pay(e)}>\r\n                            <div className=\"form-group mb-5 pb-5\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className=\"form-control\"\r\n                                    name=\"transferProof\"\r\n                                    onChange={(e) => imageHandler(e)}\r\n                                    id=\"actual-btn\"\r\n                                    hidden\r\n                                />\r\n                                <label for=\"actual-btn\" className=\"form-control bg-transparant\">\r\n                                    <img src=\"/Img/Content/AttachTransaction.png\" alt=\"\"/>\r\n                                    {formImage.fileName ? formImage.fileName : \"No file chosen\"}\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-group mt-5 pt-5\">\r\n                                <Button variant=\"dark\" className=\"form-control\" type=\"submit\"> Pay </Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered show={alert} onHide={handleAlertc}>\r\n                <Modal.Body className=\"width-100\" id=\"contained-modal-title-vcenter\">\r\n                    <p className={color}>{msg}</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","D:\\Bootcamp\\final task\\client\\src\\Component\\Cart\\Card.jsx",[],["185","186"],"D:\\Bootcamp\\final task\\client\\src\\Component\\Transaction\\TableTransaction.js",["187"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\r\n\r\nimport { API } from \"../../Config/Api\";\r\n\r\nconst TableTransaction = ({transaction, action, index}) => {\r\n  const [listBooks, setListBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getListBooks();\r\n  }, []);\r\n\r\n  const getListBooks = async () => {\r\n    try {\r\n      const list = await API.get(`/books/list/${transaction.id}`);\r\n      await setListBooks(list.data.data.listBooks);\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n\r\n  const listbook = listBooks.map((book) => <>{book.books.title}, </>);\r\n\r\n  return (\r\n    <tr className=\"align-middle\">\r\n      <td>{index + 1}</td>\r\n      <td>{transaction.users.fullName}</td>\r\n      <td width=\"10%\"><Link to={\"/Img/Transaction/\"+transaction.transferProof} target=\"_blank\">{transaction.transferProof}</Link></td>\r\n      <td>{listbook}</td>\r\n      <td className={\r\n        transaction.paymentStatus === \"Approve\" ? \"c-green\" :\r\n        transaction.paymentStatus === \"Pending\" ? \"c-yellow\" : \"c-red\"}> \r\n        Rp. {transaction.paymentTotal},-\r\n      </td>\r\n      <td className={\r\n        transaction.paymentStatus === \"Approve\" ? \"c-green\" :\r\n        transaction.paymentStatus === \"Pending\" ? \"c-yellow\" : \"c-red\"}> \r\n        {transaction.paymentStatus}\r\n      </td>\r\n      <td>\r\n        <NavDropdown className=\"inline admin-profile\">\r\n          <Dropdown.Item onClick={() => action(transaction.id, \"Approve\")} className=\"font-dropdown-size c-green\">\r\n            Approved\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={() => action(transaction.id, \"Cancel\")} className=\"font-dropdown-size c-red\">\r\n            Cancel\r\n          </Dropdown.Item>\r\n        </NavDropdown>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableTransaction;\r\n","D:\\Bootcamp\\final task\\client\\src\\Component\\Profile\\Card.jsx",["188"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction Card({transaction}) {\r\n    const history = useHistory();\r\n    const [listBooks, setListBooks] = useState([]);\r\n\r\n    useEffect(() => {\r\n      getListBooks();\r\n    }, []);\r\n\r\n    const getListBooks = async () => {\r\n      try {\r\n        setListBooks(transaction.listBooks);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n\r\n    const detailBook = (e) => {\r\n      history.push(`/Book/${e}/Detail`)\r\n    }\r\n\r\n    return (\r\n      <>\r\n          {listBooks.map((listBooks) => (\r\n            <div className=\"col-md-3\">\r\n              <div className=\"col-md-12 cursor\" onClick={() => detailBook(listBooks.books.id)}>\r\n                <img className=\"mb-3 home-img-book rounded\" src={'/Img/CoverBook/'+listBooks.books.coverFile} alt=\"\" />\r\n                <div className=\"text-left mb-3\">\r\n                  <div className=\"home-title-book\">\r\n                    <h5 className=\"name-home\">{listBooks.books.title}</h5>\r\n                  </div>\r\n                  <h6 className=\"penulis-home\">{listBooks.books.author}</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 mt-1\">\r\n                <a href={'/Img/Book/'+listBooks.books.bookFile} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                  <Button variant=\"dark\" className=\"form-control\"> Download </Button>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n        \r\n      </>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","D:\\Bootcamp\\final task\\client\\src\\Component\\Home\\CardPromo.jsx",["189","190"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Modal, Button, Alert } from \"react-bootstrap\";\r\n\r\nimport { AppContext } from \"../../Context/GlobalContext\";\r\nimport { API, setAuthToken } from \"../../Config/Api\";\r\n\r\nfunction Card({book}) {\r\n  const [state, dispatch] = useContext(AppContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const [signIn, setSignIn] = useState(false);\r\n  const [signUp, setSignUp] = useState(false);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [ownBooks, setOwnBooks] = useState(null);\r\n  const [msg, setMsg] = useState(null);\r\n  const [color, setColor] = useState(null);\r\n  const [alert, setAlert] = useState(false);\r\n  const [FormData, setForm] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setForm({ ...FormData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAlert = () => {\r\n    setAlert(true)\r\n    setSignIn(false)\r\n    setSignUp(false)\r\n  }\r\n  const handleAlertc = () => {\r\n    setAlert(false)\r\n    setSignIn(false)\r\n    setSignUp(false)\r\n  }\r\n  const handleClose = () => {\r\n    setSignIn(false)\r\n    setSignUp(false)\r\n  }\r\n  const handleSignIn = () => {\r\n    setSignUp(false)\r\n    setSignIn(true)\r\n  }\r\n  const handleSignUp = () => {\r\n    setSignIn(false)\r\n    setSignUp(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state.isLogin === true ){\r\n      ownBook();\r\n    }\r\n  }, []);\r\n\r\n  const { id, title, author, price, coverFile, about, bookFile } = book;\r\n  const { fullName, email, password, phone, address, gender } = FormData;\r\n  const books = state.books;\r\n  const findBook = books.find(books => books.id == id);\r\n\r\n  const Register = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const body = JSON.stringify({\r\n        fullName, email, password, phone, address, gender\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const user = await API.post(\"/register\", body, config);\r\n      await dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: user.data.data.user,\r\n        payloadToken: user.data.data.token,\r\n      });\r\n\r\n      setAuthToken(user.data.data.token);\r\n      setLoading(false);\r\n      handleClose();\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setShowRegister((\r\n        <Alert variant=\"danger\" onClose={() => setShowRegister(false)} dismissible>\r\n          <p>Email already exists</p>\r\n        </Alert>\r\n      ))\r\n    }\r\n  };\r\n  const Login = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const body = JSON.stringify({\r\n        email,\r\n        password\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const user = await API.post(\"/login\", body, config);\r\n\r\n      dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: user.data.data.user,\r\n        payloadToken: user.data.data.token,\r\n      });\r\n\r\n      setAuthToken(user.data.data.token);\r\n      setLoading(false);\r\n      handleClose();\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setShowLogin((\r\n        <Alert variant=\"danger\" onClose={() => setShowLogin(false)} dismissible>\r\n          <p>Username or password incorrect</p>\r\n        </Alert>\r\n      ))\r\n    }\r\n  };\r\n\r\n  const cart = async () => {\r\n    if (findBook){\r\n      setColor(\"text-center c-red\");\r\n      await setMsg(\"The book is already in the cart\");\r\n      handleAlert();\r\n    } else {\r\n      dispatch({\r\n        type: \"ADD_CART\",\r\n        payload: book,\r\n      })\r\n      setColor(\"text-center c-green\");\r\n      await setMsg(\"The product is successfully added to the cart\");\r\n      handleAlert();\r\n    }\r\n  }\r\n\r\n  const ownBook = async () =>{\r\n    try {\r\n      const ownBooks = await API.get(`/books/${id}/${state.user.id}`);\r\n      const data = ownBooks.data.status;\r\n      if (data) {\r\n        await setOwnBooks(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const detailBook = () => {\r\n    history.push(`/Book/${id}/Detail`)\r\n  }\r\n    return (\r\n      <div>\r\n        {state.isLogin ? (\r\n          <div className=\"row p-2\">\r\n            <div className=\"col-md-6 cursor\" onClick={detailBook}>\r\n              <img className=\"mb-3 home-img-book rounded\" src={'/Img/CoverBook/'+coverFile} alt=\"\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-3 bg-white-promo\">\r\n              <div className=\"text-left container-bg-white-promo\">\r\n                <div className=\"home-title-book\">\r\n                  <h5 className=\"name-home\">{title}</h5>\r\n                </div>\r\n                <div className=\"home-title-book\">\r\n                  <h6 className=\"penulis-home\">{author}</h6>\r\n                </div>\r\n                <div className=\"home-description-book mt-2\">\r\n                  <h6 className=\"description-home\">{about}</h6>\r\n                </div>\r\n                <div className=\"home-title-book mt-3\">\r\n                  <h6 className=\"penulis-home c-green font-wg\">Rp.{price},-</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"home-title-book\">\r\n                {ownBooks === \"Success\" ? (\r\n                  <a href={'/Img/Book/'+bookFile} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                    <Button variant=\"dark\" className=\"form-control font-dropdown-size\"> Download </Button>\r\n                  </a>\r\n                ) : (\r\n                  <Button variant=\"dark\" className=\"form-control font-dropdown-size\" onClick={cart}> Add to Cart </Button>\r\n                ) }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"row p-2\">\r\n            <div className=\"col-md-6 cursor\" onClick={handleSignIn}>\r\n              <img className=\"mb-3 home-img-book rounded\" src={'/Img/CoverBook/'+coverFile} alt=\"\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-3 bg-white-promo\">\r\n              <div className=\"text-left container-bg-white-promo\">\r\n                <div className=\"home-title-book\">\r\n                  <h5 className=\"name-home\">{title}</h5>\r\n                </div>\r\n                <div className=\"home-title-book\">\r\n                  <h6 className=\"penulis-home\">{author}</h6>\r\n                </div>\r\n                <div className=\"home-description-book mt-2\">\r\n                  <h6 className=\"description-home\">{about}</h6>\r\n                </div>\r\n                <div className=\"home-title-book mt-3\">\r\n                <h6 className=\"penulis-home c-green font-wg\">Rp.{price},-</h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"home-title-book\">\r\n                <Button variant=\"dark\" className=\"form-control font-dropdown-size\" onClick={handleSignIn}> Add to Cart </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n          {/* Modal Sign In */}\r\n          <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered dialogClassName=\"modal-sign\" show={signIn} onHide={handleClose}>\r\n            <Modal.Body id=\"contained-modal-title-vcenter\">\r\n              <div className=\"mt-4\">\r\n                <h2 className=\"mb-4\"> Login</h2>\r\n                <form onSubmit={(e) => Login(e)}>\r\n                  <div className=\"form-group\">\r\n                    {showLogin}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"email\" className=\"form-control form-grey\" name=\"email\" onChange={(e) => onChange(e)} placeholder=\"Email\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" className=\"form-control form-grey\" name=\"password\" onChange={(e) => onChange(e)} placeholder=\"Password\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    {loading ? (\r\n                      <Button variant=\"dark\" className=\"form-control\"> Loading ...</Button>\r\n                    ) : (\r\n                      <Button variant=\"dark\" className=\"form-control\" type=\"submit\"> Login</Button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <h6>Don't have an account? Klik <b className=\"cursor inline font-wg\" onClick={handleSignUp}>Here</b></h6>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n          {/* Modal Sign Up */}\r\n          <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered dialogClassName=\"modal-sign\" show={signUp} onHide={handleClose}>\r\n            <Modal.Body className=\"width-80\" id=\"contained-modal-title-vcenter\">\r\n              <div className=\"mt-4\">\r\n\r\n                <h2 className=\"mb-4\"> Register</h2>\r\n                <form onSubmit={(e) => Register(e)}>\r\n                  <div className=\"form-group\">\r\n                    {showRegister}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"text\"  className=\"form-control form-grey\" name=\"fullName\"  onChange={(e) => onChange(e)} placeholder=\"Full Name\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"email\"  className=\"form-control form-grey\" name=\"email\"  onChange={(e) => onChange(e)} placeholder=\"Email\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"password\" className=\"form-control  form-grey\" name=\"password\" onChange={(e) => onChange(e)} placeholder=\"Password\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <select name=\"gender\" className=\"form-control  form-grey\" onChange={(e) => onChange(e)} >\r\n                      <option disabled selected>== Gender ==</option>\r\n                      <option value=\"Male\">Male</option>\r\n                      <option value=\"Female\">Female</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"number\" className=\"form-control  form-grey\" name=\"phone\" onChange={(e) => onChange(e)} placeholder=\"Phone Number\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control  form-grey\" name=\"address\" onChange={(e) => onChange(e)} placeholder=\"Address\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    {loading ? (\r\n                      <Button variant=\"dark\" className=\"form-control\"> Loading ...</Button>\r\n                    ) : (\r\n                      <Button variant=\"dark\" className=\"form-control\" type=\"submit\"> Register</Button>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <h6>Already have an account? Klik <b className=\"cursor inline font-wg\" onClick={handleSignIn}>Here</b></h6>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n\r\n          <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered show={alert} onHide={handleAlertc}>\r\n            <Modal.Body className=\"width-100\" id=\"contained-modal-title-vcenter\">\r\n                <p className={color}>{msg}</p>\r\n            </Modal.Body>\r\n          </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","D:\\Bootcamp\\final task\\client\\src\\Component\\Loading.jsx",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"191","replacedBy":"195"},{"ruleId":"193","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":12,"column":12,"nodeType":"199","messageId":"200","endLine":12,"endColumn":17},{"ruleId":"197","severity":1,"message":"198","line":12,"column":12,"nodeType":"199","messageId":"200","endLine":12,"endColumn":17},{"ruleId":"191","replacedBy":"201"},{"ruleId":"193","replacedBy":"202"},{"ruleId":"197","severity":1,"message":"198","line":22,"column":10,"nodeType":"199","messageId":"200","endLine":22,"endColumn":15},{"ruleId":"203","severity":1,"message":"204","line":33,"column":9,"nodeType":"205","messageId":"206","endLine":33,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":46,"column":7,"nodeType":"205","messageId":"206","endLine":46,"endColumn":25},{"ruleId":"207","severity":1,"message":"208","line":52,"column":6,"nodeType":"209","endLine":52,"endColumn":8,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":63,"column":6,"nodeType":"209","endLine":63,"endColumn":8,"suggestions":"212"},{"ruleId":"197","severity":1,"message":"213","line":90,"column":13,"nodeType":"199","messageId":"200","endLine":90,"endColumn":16},{"ruleId":"197","severity":1,"message":"214","line":11,"column":17,"nodeType":"199","messageId":"200","endLine":11,"endColumn":25},{"ruleId":"207","severity":1,"message":"211","line":28,"column":6,"nodeType":"209","endLine":28,"endColumn":8,"suggestions":"215"},{"ruleId":"207","severity":1,"message":"216","line":30,"column":6,"nodeType":"209","endLine":30,"endColumn":8,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":32,"column":49,"nodeType":"220","messageId":"221","endLine":32,"endColumn":51},{"ruleId":"197","severity":1,"message":"222","line":15,"column":10,"nodeType":"199","messageId":"200","endLine":15,"endColumn":15},{"ruleId":"197","severity":1,"message":"223","line":25,"column":9,"nodeType":"199","messageId":"200","endLine":25,"endColumn":20},{"ruleId":"197","severity":1,"message":"224","line":28,"column":9,"nodeType":"199","messageId":"200","endLine":28,"endColumn":21},{"ruleId":"207","severity":1,"message":"225","line":55,"column":6,"nodeType":"209","endLine":55,"endColumn":8,"suggestions":"226"},{"ruleId":"191","replacedBy":"227"},{"ruleId":"193","replacedBy":"228"},{"ruleId":"197","severity":1,"message":"229","line":4,"column":40,"nodeType":"199","messageId":"200","endLine":4,"endColumn":54},{"ruleId":"218","severity":1,"message":"219","line":127,"column":40,"nodeType":"220","messageId":"221","endLine":127,"endColumn":42},{"ruleId":"218","severity":1,"message":"219","line":151,"column":29,"nodeType":"220","messageId":"221","endLine":151,"endColumn":31},{"ruleId":"197","severity":1,"message":"230","line":10,"column":11,"nodeType":"199","messageId":"200","endLine":10,"endColumn":18},{"ruleId":"231","severity":1,"message":"232","line":59,"column":48,"nodeType":"233","messageId":"234","endLine":59,"endColumn":50},{"ruleId":"191","replacedBy":"235"},{"ruleId":"193","replacedBy":"236"},{"ruleId":"207","severity":1,"message":"237","line":12,"column":6,"nodeType":"209","endLine":12,"endColumn":8,"suggestions":"238"},{"ruleId":"207","severity":1,"message":"237","line":11,"column":8,"nodeType":"209","endLine":11,"endColumn":10,"suggestions":"239"},{"ruleId":"207","severity":1,"message":"240","line":60,"column":6,"nodeType":"209","endLine":60,"endColumn":8,"suggestions":"241"},{"ruleId":"218","severity":1,"message":"219","line":65,"column":49,"nodeType":"220","messageId":"221","endLine":65,"endColumn":51},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],["242"],["243"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar",["242"],["243"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["244"],"React Hook useEffect has missing dependencies: 'history' and 'state.user.role'. Either include them or remove the dependency array.",["245"],"'add' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["246"],"React Hook useEffect has missing dependencies: 'book' and 'ownBook'. Either include them or remove the dependency array.",["247"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'alert' is assigned a value but never used.","'handleAlert' is assigned a value but never used.","'handleAlertc' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'transaction' and 'valueEdit'. Either include them or remove the dependency array.",["248"],["242"],["243"],"'faShoppingCart' is defined but never used.","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["242"],["243"],"React Hook useEffect has a missing dependency: 'getListBooks'. Either include it or remove the dependency array.",["249"],["250"],"React Hook useEffect has missing dependencies: 'ownBook' and 'state.isLogin'. Either include them or remove the dependency array.",["251"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"261","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [checkUser]",{"range":"266","text":"267"},"Update the dependencies array to be: [history, state.user.role]",{"range":"268","text":"269"},{"range":"270","text":"269"},"Update the dependencies array to be: [book, ownBook]",{"range":"271","text":"272"},"Update the dependencies array to be: [transaction, valueEdit]",{"range":"273","text":"274"},"Update the dependencies array to be: [getListBooks]",{"range":"275","text":"276"},{"range":"277","text":"276"},"Update the dependencies array to be: [ownBook, state.isLogin]",{"range":"278","text":"279"},[1388,1390],"[checkUser]",[1661,1663],"[history, state.user.role]",[878,880],[1036,1038],"[book, ownBook]",[1723,1725],"[transaction, valueEdit]",[360,362],"[getListBooks]",[321,323],[1629,1631],"[ownBook, state.isLogin]"]